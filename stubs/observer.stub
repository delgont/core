<?php

namespace {{ observerNamespace }};

use {{ modelNamespace }};
 
use {{ modelCacheKeysNamespace }};

class {{ class }}
{
    /**
     * Handle the {{ model }} "created" event.
     */
    public function created({{ model }} $model): void
    {
        {{ modelCacheKeys }}::clearCache();
        {{ modelCacheKeys }}::clearCacheUpToLastPage(15,100, '{{ plural_model }}');
    }

    /**
     * Handle the {{ model }} "updated" event.
     */
    public function updated({{ model }} $model): void
    {
        {{ modelCacheKeys }}::clearCache();
        {{ modelCacheKeys }}::clearCacheUpToLastPage(15,100, '{{ plural_model }}');

    }

    /**
     * Handle the {{ model }} "deleted" event.
     */
    public function deleted({{ model }} $model): void
    {
        {{ modelCacheKeys }}::clearCache();
        {{ modelCacheKeys }}::clearCacheUpToLastPage(15,100, '{{ plural_model }}');

    }

    /**
     * Handle the {{ model }} "restored" event.
     */
    public function restored({{ model }} $model): void
    {
        {{ modelCacheKeys }}::clearCache();
        {{ modelCacheKeys }}::clearCacheUpToLastPage(15,100, '{{ plural_model }}');

    }

    /**
     * Handle the {{ model }} "force deleted" event.
     */
    public function forceDeleted({{ model }} $model): void
    {
        {{ modelCacheKeys }}::clearCache();
        {{ modelCacheKeys }}::clearCacheUpToLastPage(15,100, '{{ plural_model }}');

    }
}
